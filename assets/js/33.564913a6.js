(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{328:function(t,r,a){"use strict";a.r(r);var e=a(4),s=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"nginx-node"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx-node"}},[t._v("#")]),t._v(" Nginx + Node")]),t._v(" "),r("blockquote",[r("p",[t._v("充分使用二级域名映射服务器内部的端口")]),t._v(" "),r("p",[t._v("在nginx配置文件中再创建一个server")])]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("server "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#域名")]),t._v("\n    server_name  qdzhou.cn www.qdzhou.cn"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    location / "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \t\tproxy_set_header X-Real-IP "),r("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \t\t"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认会将后端服务器的HOST填写进去")]),t._v("\n\t\t\t\tproxy_set_header Host "),r("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#node.js应用的端口")]),t._v("\n        proxy_pass http://127.0.0.1:3000"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        root /home/server/"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#静态文件交给Nginx直接处理")]),t._v("\n    location ~ *^.+"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("."),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("css "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" js "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" txt "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" swf "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" mp4"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root /home/"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        access_log off"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        expires 24h"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h4",{attrs:{id:"通过设置nginx配置去调整转发报文的头部"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通过设置nginx配置去调整转发报文的头部"}},[t._v("#")]),t._v(" 通过设置nginx配置去调整转发报文的头部：")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("proxy_set_header X-real-ip $remote_addr;")]),t._v(" "),r("ul",[r("li",[t._v("其中这个X-real-ip是一个自定义的变量名，名字可以随意取，这样做完之后，用户的真实ip就被放在X-real-ip这个变量里了")]),t._v(" "),r("li",[t._v('在web端可以这样获取：request.getHeader("X-real-ip")')])])]),t._v(" "),r("li",[r("p",[t._v("proxy_set_header X-Forwarded-For $remote_addr;")]),t._v(" "),r("ul",[r("li",[t._v("真实的显示出客户端原始ip。")]),t._v(" "),r("li",[t._v("nginx更多使用这条配置，X-Forwarded-For为默认字段")])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("proxy_set_header Host $http_host;")])]),t._v(" "),r("ul",[r("li",[t._v("如果想获取客户端访问的头部，可以这样来设置。")]),t._v(" "),r("li",[t._v("但是，如果客户端请求头中没有携带这个头部，那么传递到后端服务器的请求也不含这个头部。")])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("proxy_set_header Host $host;")])]),t._v(" "),r("ul",[r("li",[t._v("这个配置相当于上面配置的增强。")]),t._v(" "),r("li",[t._v('它的值在请求包含"Host"请求头时为"Host"字段的值，在请求未携带"Host"请求头时为虚拟主机的主域名。')])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("proxy_set_header Host $host:$proxy_port;")])]),t._v(" "),r("ul",[r("li",[t._v("服务器名和后端服务器的端口（访问端口）一起传送。")])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v('proxy_set_header <<<*>>> "";')])]),t._v(" "),r("ul",[r("li",[t._v("请求头的值为空，请求头将不会传送给后端服务器。")])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;")])]),t._v(" "),r("ul",[r("li",[t._v("在默认情况下经过proxy转发的请求，在后端看来远程地址都是proxy端的ip 。\n"),r("ul",[r("li",[t._v("添加这条配置之后：")]),t._v(" "),r("li",[t._v("意思是增加一个$proxy_add_x_forwarded_for到X-Forwarded-For里去，注意是"),r("strong",[t._v("增加")]),t._v("，而不是覆盖")]),t._v(" "),r("li",[t._v("当然由于默认的X-Forwarded-For值是空的，所以我们总感觉X-Forwarded-For的值就等于$proxy_add_x_forwarded_for的值，")]),t._v(" "),r("li",[t._v('实际上当你搭建两台nginx在不同的ip上，并且都使用了这段配置，那你会发现在web服务器端通过request.getHeader("X-Forwarded-For")获得的将会是'),r("em",[r("strong",[t._v("客户端**"),r("strong",[r("strong",[t._v("ip")]),t._v("和")]),t._v("第一台")])]),r("em",[t._v("nginx的ip")]),t._v("**。")])])])]),t._v(" "),r("ul",[r("li",[r("p",[t._v("在第一台nginx中,使用时")]),t._v(" "),r("ul",[r("li",[t._v("proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;**")]),t._v(" "),r("li",[t._v('现在的$proxy_add_x_forwarded_for变量的"X-Forwarded-For"部分是空的，所以只有$remote_addr，而$remote_addr的值是用户的ip，于是赋值以后，X-Forwarded-For变量的值就是用户的真实的ip地址了。')])])]),t._v(" "),r("li",[r("p",[t._v("到了第二台nginx，也使用")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;")])]),t._v(" "),r("p",[t._v("现在的$proxy_add_x_forwarded_for变量")])])])]),t._v(" "),r("li",[r("blockquote",[r("p",[t._v("X-Forwarded-For部分包含的是用户的真实ip")]),t._v(" "),r("p",[t._v("$remote_addr部分的值是上一台nginx的ip地址")]),t._v(" "),r("p",[t._v("于是通过这个赋值以后现在的X-Forwarded-For的值就变成了用户的真实ip，第一台nginx的ip")])])])])])])])}),[],!1,null,null,null);r.default=s.exports}}]);